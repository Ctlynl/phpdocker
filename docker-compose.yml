version: "3.9" 

services:
### NGINX Server #########################################
  nginx:
    build:
      context: ./nginx/
      args: 
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    ports:
      - ${NGINX_HOST_HTTP_PORT}:80
      - ${NGINX_HOST_HTTPS_PORT}:443
    networks:
      - backend
    depends_on:
      - php-fpm
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_CERT_PATH}:/etc/nginx/cert

### PHP-FPM ##############################################
  php-fpm:
    build: 
      context: ./php-fpm/
      args: 
        - PHP_VERSION=${PHP_VERSION}
        - PHP_REDIS_FILE_NAME=${PHP_FPM_REDIS_EXT}
        - MONGODB_FILE_NAME=${PHP_FPM_MONGODB_EXT}
        - GD_FREE_TYPE_NAME=${PHP_FPM_GD_FREE_TYPE_NAME}
        - XDEBUG_FILE_NAME=${PHP_FPM_XDEBUG_NAME}
    ports:
      - ${PHP_FPM_RORT}:9000
    depends_on:
      - redis
      - mysql
      - mongo
    networks:
      - backend
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ./php-fpm/config/php.ini:/usr/local/etc/php/php.ini
      - ./php-fpm/config/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./php-fpm/config/www.conf:/usr/local/etc/php-fpm.d/www.conf

### Workspace ##################################
  workspace: 
    build:
      context: ./workspace
      args: 
        - PHP_VERSION=${PHP_VERSION}
        - PHP_REDIS_FILE_NAME=${PHP_CLI_REDIS_EXT}
        - MONGODB_FILE_NAME=${PHP_CIL_MONGODB_EXT}
        - GD_FREE_TYPE_NAME=${PHP_CLI_GD_FREE_TYPE_NAME}
        - SWOOLE_FILE_NAME=${PHP_CLI_SWOOLE_EXT}
        - EVENT_FILE_NAME=${PHP_CLI_EVENT_EXT}
        - XDEBUG_FILE_NAME=${PHP_CLI_XDEBUG_NAME}
        - CRONTAB_CONF_DIR=${CRONTAB_CONF_DIR}
    ports:
      - "9501:9501"
    init: true
    networks:
      - backend
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ./workspace/php.ini:/usr/local/etc/php/php.ini
    stdin_open: true
    tty: true

### workspace8 PHP8 version ##################################
  workspace8:
    build:
      context: ./workspace8
      args:
        - PHP_REDIS_FILE_NAME=${PHP8_CLI_REDIS_EXT}
        - MONGODB_FILE_NAME=${PHP8_CIL_MONGODB_EXT}
        - SWOOLE_FILE_NAME=${PHP8_CLI_SWOOLE_EXT}
        - EVENT_FILE_NAME=${PHP8_CLI_EVENT_EXT}
        - GD_FREE_TYPE_NAME=${PHP8_CLI_GD_FREE_TYPE_NAME}
        - CRONTAB_CONF_DIR=${CRONTAB_CONF_DIR}
    ports:
      - "9502:9502"
      - "8080:8080"
      - "8081:8081"
    init: true
    networks:
      - backend
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ./workspace8/php.ini:/usr/local/etc/php/php.ini
    stdin_open: true
    tty: true

### Redis ################################################
  redis: 
    build: ./redis/
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - backend
    volumes:
      - redis:/data

### MySQL ################################################
  mysql: 
    build:
      context: ./mysql
      args:
        - TZ=${MYSQL_TZ}
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - backend
    volumes:
      - mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d

### MongoDB ##############################################
  mongo: 
    build: ./mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - ${MONGODB_PORT}:27017
    networks:
      - backend
    volumes:
      - mongo:/data/db
      - mongo:/data/configdb
      - ${MONGO_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d

### rabbitmq ################################################
  rabbitmq:
    build:
      context: ./rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${RABBITMQ_NODE_HOST_PORT}:5672
      - ${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671
      - ${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672
    # 特权模式
    privileged: true
    networks:
      - backend
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - ./rabbitmq/conf/:/etc/rabbitmq/

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  redis:
    driver: ${VOLUMES_DRIVER}
  mysql:
    driver: ${VOLUMES_DRIVER}
  mongo:
    driver: ${VOLUMES_DRIVER}
  rabbitmq:
    driver: ${VOLUMES_DRIVER}